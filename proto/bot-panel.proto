syntax = "proto3";

option go_package = "bot-panel/;bot_panel";

import "google/protobuf/wrappers.proto";

service BotPanel {
  rpc SendCommand(SendVKCommandRequest) returns (SendVKCommandResponse);
  rpc SendCommandWithoutPermissions(SendVKCommandRequest) returns (SendVKCommandResponse);
  rpc HasDostup(HasDostupRequest) returns (google.protobuf.BoolValue);
  rpc GetOnline(BotPanelGetOnlineRequest) returns (BotPanelGetOnlineResponse);
  rpc GetOrgMember(BotPanelGetOrgMemberRequest) returns (BotPanelGetOrgMemberResponse);
  rpc RakBot(BotPanelRakBotRequest) returns (BotPanelRakBotResponse);
}

message BotPanelRakBotRequest {
  int32 server_id = 1;
  string nickname = 2;
  string ip = 3;
}

message BotPanelRakBotResponse {
  bool success = 1;
  string nickname = 2;
}

message SendVKCommandRequest {
    int32 peer_id = 1;
    int32 user_id = 2;
    string command = 3;
}

message HasDostupRequest {
    enum BotPanelDostup {
        SEND_COMMAND = 0;
    }

    int32 peer_id = 1;
    int32 user_id = 2;
    BotPanelDostup dostup = 3;
    
}

message SendVKCommandResponse {
    string command_id = 1;
    bool success_command = 2;
    bool success_garant = 3;
    string command_request = 4;
    string command_response = 5;
    optional string error = 6;
}

message BotPanelGetOnlineRequest {
    int32 server_id = 1;
    string nickname = 2;
}

message BotPanelGetOnlineResponse {
    string nickname = 1;
    string reg_ip = 2;
    string last_ip = 3;
}

message BotPanelGetOrgMemberRequest {
    int32 server_id = 1;
    int32 organization_id = 2;
}

message BotPanelGetOrgMemberResponse {
    int32 organization_id = 1;
    string organization_name = 2;
    string leader_name = 3;
    int32 leader_id = 4;
    int32 deputy_count = 5;
    int32 member_count = 6;
    int32 member_afk_count = 7;
    string raw = 8;
}