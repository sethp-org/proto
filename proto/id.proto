syntax = "proto3";

option go_package = "id/;id";

import "google/protobuf/empty.proto";

service MappingService {
    rpc MappingBySourceAndUserID(MappingBySourceAndUserIDRequest) returns (MappingBySourceAndUserIDResponse);
    rpc Create(Mapping) returns (google.protobuf.Empty);

    rpc UserIDByCode(UserIDByCodeRequest) returns (UserIDByCodeResponse);
    rpc UserByID(UserIDUserByIDRequest) returns (UserIDUserByIDResponse);
}

enum MappingSource {
    discord = 0;
    grafana = 1;
    leader = 2;
}

message Mapping {
    MappingSource source = 1;
    string user_id_a = 2;
    optional int32 user_id_b = 3;
    optional string user_id_c = 4;
    optional bytes data = 5;
}

message MappingBySourceAndUserIDRequest {
    MappingSource source = 1;
    string user_id = 2;
}

message MappingBySourceAndUserIDResponse {
    repeated Mapping mapping = 1;
}

message UserIDByCodeRequest {
    MappingSource source = 1;
    string code = 2;
}

message UserIDByCodeResponse {
    string id = 1;
}

message UserIDUserByIDRequest {
    string id = 1;
}

message UserIDUserByIDResponse {
    UserIDUser user = 1;
}

message UserIDUser {
    string id = 1;
    string name = 2;
    string email = 3;
    string given_name = 4;
    string family_name = 5;
}